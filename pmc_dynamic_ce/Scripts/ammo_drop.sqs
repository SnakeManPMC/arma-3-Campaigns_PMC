OnMapSingleClick {if (Count _units == 0) then {[_pos, _shift, _alt] exec (rRadioFolder + "\markeraction.sqs"); true} else {false}} 

_pos = _this select 0

OnMapSingleClick {if (Count _units == 0) then {[_pos, _shift, _alt] exec (rRadioFolder + "\markeraction.sqs"); true} else {false}} 

if (PMC_AmmoDropRunning==1) then { hint "Sorry, ammo drop mission running. Please wait."; exit; };
PMC_AmmoDropRunning=1;

; long waypoint distance, was 6400.
_lwp=6400;

_t = "Logic" createVehicle _pos;

;
; this is where the mission starts. spawn marker, this is linked to the 
; airstrike script. dont remove the marker!
;
_homeplate = (getMarkerPos "spawn");
_mrkr = "AmmoDropUH60";
_mrkr setMarkerType "supply";
_mrkr setMarkerPos _pos;

;
; JAM3 pilot, but can use bas homopilot also
;
_wPil = "CUP_B_USMC_Pilot";

_h = "CUP_B_UH60M_US" createvehicle _homeplate;
_h addEventHandler ["killed",{_this exec "killed.sqs"}];

; not sure what the bas homochopper is loaded on.
clearMagazineCargo _h;
clearWeaponCargo _h;

adp1=objnull;adp2=objnull;
_wgrp=objnull;

_wPil createunit [_homeplate, usinf1, "adp1 = this", 1, "SERGEANT"];
[adp1] join grpnull;
_wgrp = group adp1;

_wPil createunit [_homeplate, _wgrp, "adp2 = this", 1, "CORPORAL"];

{_x addEventHandler [{killed}, {_this exec "killed.sqs"}]} forEach units _wgrp;
{[_x] exec "init_addTracers.sqs"} foreach units _wgrp;

adp1 moveinDriver _h;
adp2 moveinGunner _h;

_wgrp setcombatmode "yellow";
_wgrp setbehaviour "aware";
_wgrp setspeedmode "full";
_h flyinheight 85;

leader _wgrp sideChat "UH60 inbound to ammo drop location. Stand by. Over.";
~3

;
; if the target is too far away
;
if (leader _wgrp distance _t > _lwp) then { goto "BigMotherFuckerMovingShit"; };

leader _wgrp move getpos _t;

; we are back
#EndAlive

;
; hes flying towards the drop point
;
#Inbound
~2
if (!unitReady _h) then { goto "Inbound"; };
if (!alive _h) then { goto "EndDead"; };

leader _wgrp sideChat "UH60 Landing. Over.";

;
; hes now landing
;
_h land "LAND";

#LandLoop
~2
if (getpos _h select 2 > 2) then { goto "LandLoop"; };
if (!alive _h) then { goto "EndDead"; };

leader _wgrp sideChat "UH60 Dropping supplies. Over.";

;
; insert ammo boxes
;
~30 + random 15
_helopos = getpos _h;
; put some decor in
_abox1 = "CUP_USBasicAmmunitionBox" createvehicle _helopos;
_abox1 setdir random 360;

_abox1 addWeaponCargo ["CUP_launch_M136",2];
_abox1 addMagazineCargo ["CUP_M136_M",8];
_abox1 addWeaponCargo ["AALauncher",1];
_abox1 addMagazineCargo ["AALauncher",6];

_ran=2 + random 5;_ran=_ran-(_ran mod 1);
_abox1 addMagazineCargo ["CUP_MineE", _ran];
_ran=2 + random 5;_ran=_ran-(_ran mod 1);
_abox1 addMagazineCargo ["CUP_PipeBomb_M", _ran];

~30 + random 15
_abox2 = "CUP_USBasicAmmunitionBox" createvehicle _helopos;
_abox2 setdir random 360;

_abox2 addWeaponCargo ["CUP_launch_M136",2];
_abox2 addMagazineCargo ["CUP_M136_M",8];
_abox2 addWeaponCargo ["AALauncher",1];
_abox2 addMagazineCargo ["AALauncher",6];

_ran=2 + random 5;_ran=_ran-(_ran mod 1);
_abox2 addMagazineCargo ["CUP_MineE", _ran];
_ran=2 + random 5;_ran=_ran-(_ran mod 1);
_abox2 addMagazineCargo ["CUP_PipeBomb_M", _ran];

~30 + random 15
_abox3 = "CUP_USBasicAmmunitionBox" createvehicle _helopos;
_abox3 setdir random 360;

if (!alive _h) then { goto "EndDead"; };



;
; fly back home!
;
_t setpos (getMarkerPos "spawn");
_mrkr setMarkerType "empty";
leader _wgrp sideChat "UH60 Ammo drop complete, heading for homeplate. Over.";

;
; if the target is too far away
;
if (leader _wgrp distance _t > _lwp) then { goto "BigMotherFuckerMovingShit2"; };

leader _wgrp move getpos _t;

; we are back
#EndAlive2

#RTBLoop
~2
if (!unitReady _h) then { goto "RTBLoop"; };

_h land "land"

#LandingBase
~1
if (getpos _h select 2 > 2) then { goto "LandingBase"; };

#EndAlive
leader _wgrp sideChat "UH60 reporting back to base after successfull ammo drop. Ammo drop available. Over.";
~3
deletevehicle _h;
~3
{deleteVehicle _x} foreach [adp2,adp1];
PMC_AmmoDropRunning=0;
deleteVehicle _t;

exit;

#EndDead
; some stuff perhaps? rescue mission, dunno.
_mrkr setMarkerType "empty";
PMC_AmmoDropRunning=0;
deleteVehicle _t;

exit



;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
; balls are sweating
;
;
; plot waypoints by Snake Man & Zeneth
;
; give this script a 
; [groupname,destination object] exec "patrol.sqs";

#BigMotherFuckerMovingShit

_targetP = _t;

_Xend = getpos _targetP select 0
_Yend = getpos _targetP select 1
_Xstart = getpos leader _wgrp select 0
_Ystart = getpos leader _wgrp select 1

; umm this tries to make the substeps little less, 
; but still dynamic according to the distance to travel.
_r1=( (leader _wgrp distance _t) / _lwp );
_r1=_r1-(_r1 mod 1);
_sT = _r1;

_dX = _Xend - _Xstart
_dY = _Yend - _Ystart
_SubSteps = _sT;
_ActStep = 1;
_posX=0;
_posY=0;


#WPLoop
_posX = _Xstart + (_dX * _ActStep / _SubSteps);
_posY = _Ystart + (_dY * _ActStep / _SubSteps);
goto "MoveTheGroup";
#ReturnFromMove
_ActStep=_ActStep+1;
?(_ActStep < _SubSteps): goto "WPLoop";


leader _wgrp move getpos _targetP;
#WaitMyDamnGuys
~3
if (!unitready leader _wgrp) then { goto "WaitMyDamnGuys"; };

; plotting has completely ended, return our command to the fight part of this script
goto "EndAlive";


#MoveTheGroup
leader _wgrp doMove [_posX,_posY];
#MoveLoop
~2
if (!unitready leader _wgrp) then { goto "MoveLoop"; };
goto "ReturnFromMove";




;
; trip to back home!
;
#BigMotherFuckerMovingShit2

_targetP = _t;

_Xend = getpos _targetP select 0
_Yend = getpos _targetP select 1
_Xstart = getpos leader _wgrp select 0
_Ystart = getpos leader _wgrp select 1

; umm this tries to make the substeps little less, 
; but still dynamic according to the distance to travel.
_r1=( (leader _wgrp distance _t) / _lwp);
_r1=_r1-(_r1 mod 1);
_sT = _r1;

_dX = _Xend - _Xstart
_dY = _Yend - _Ystart
_SubSteps = _sT;
_ActStep = 1;
_posX=0;
_posY=0;


#WPLoop2
_posX = _Xstart + (_dX * _ActStep / _SubSteps);
_posY = _Ystart + (_dY * _ActStep / _SubSteps);
goto "MoveTheGroup2";
#ReturnFromMove2
_ActStep=_ActStep+1;
?(_ActStep < _SubSteps): goto "WPLoop2";


leader _wgrp move getpos _targetP;
#WaitMyDamnGuys2
~3
if (!unitready leader _wgrp) then { goto "WaitMyDamnGuys2"; };

; plotting has completely ended, return our command to the fight part of this script
goto "EndAlive2";


#MoveTheGroup2
leader _wgrp doMove [_posX,_posY];
#MoveLoop2
~2
if (!unitready leader _wgrp) then { goto "MoveLoop2"; };
goto "ReturnFromMove2";
